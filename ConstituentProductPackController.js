/*
 * File: app/controller/ConstituentProductPackController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cobuy.controller.ConstituentProductPackController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'allConstituentsProductDataview',
            selector: 'productdetailspanelforproductswithconstituentswin dataview#constituentsDataview'
        }
    ],

    onRemoveConstitutentProductFromThePackButtonClick: function(button, e, eOpts) {
        /**var product_win = Ext.getCmp('productdetailspanelforproductswithconstituentswin');

        var product_id = button.up('window').down('form').down('hiddenfield[name=product_id]').getValue();

        var pack_quantity = product_win.down('form').down('#quantityOfPurchase').getValue();

        var validity = product_win.down('form').down('hiddenfield[name=validity]').getValue();

        var operation = product_win.down('form').down('hiddenfield[name=operation]').getValue();

        var win = button.up('window'),
        			formPanel = win.down('form');
        			//store = this.getAllConstituentsProductDataview().getStore();
                    store = product_win.down('#constituentsDataview').getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=ProductConstituents/removeThisConstituentFromThePack',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
                                    store.load({
                                        params:{
                                           product_id:product_id,
                                            operation:operation
                                        }


                                    });

                                    var pack_prevailing_retail_selling_price = result.pack_prevailing_retail_selling_price;

                                    var pack_member_selling_price = result.pack_member_selling_price;

                                    if(validity == 'true'){

                                        var amount_to_be_paid =pack_member_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_member_selling_price ) * pack_quantity;
                                    }else{
                                        var amount_to_be_paid =pack_prevailing_retail_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_prevailing_retail_selling_price ) * pack_quantity;
                                    }

                                    var values = {
                                        prevailing_retail_selling_price:pack_prevailing_retail_selling_price,
                                        prevailing_retail_selling_price_for_display:Ext.util.Format.number(pack_prevailing_retail_selling_price,'0,000.00'),
                                        per_portion_price:pack_member_selling_price,
                                        per_portion_price_for_display:Ext.util.Format.number(pack_member_selling_price,'0,000.00'),
                                        quantity_of_purchase:pack_quantity,
                                        amount_to_be_paid:amount_to_be_paid,
                                        amount_to_be_paid_for_display:Ext.util.Format.number(amount_to_be_paid,'0,000.00'),
                                        amount_save_on_purchase:amount_save_on_purchase,
                                        amount_save_on_purchase_for_display:Ext.util.Format.number(amount_save_on_purchase,'0,000.00')
                                    };

                                    //reset the form
                                    product_win.down('form').getForm().setValues(values);
                                    console.log('prevailing selling price is:',result.pack_prevailing_retail_selling_price);
                                    console.log('member selling price is:',result.pack_member_selling_price);
                                    console.log('the quantity is :',pack_quantity);
                                    console.log('the amount paid is :',amount_to_be_paid);
                                    console.log('the amount saved is :',amount_save_on_purchase);

        							win.close();
                                     //redirect to quickteller site for payment
                                    //window.open('https://www.quickteller.com/cobuy');
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
                    **/

        var product_win = Ext.getCmp('productdetailspanelforproductswithconstituentswin');

        var product_id = button.up('window').down('form').down('hiddenfield[name=product_id]').getValue();

        var pack_quantity = product_win.down('form').down('#quantityOfPurchase').getValue();

        var validity = product_win.down('form').down('hiddenfield[name=validity]').getValue();

        var operation = product_win.down('form').down('hiddenfield[name=operation]').getValue();

        var win = button.up('window'),
        			formPanel = win.down('form');
        			//store = this.getAllConstituentsProductDataview().getStore();
                    store = product_win.down('#constituentsDataview').getStore();

        Ext.Ajax.request({
           url: '/cobuy/index.php?r=ProductConstituents/removeThisConstituentFromThePack',
           params: formPanel.getForm().getFieldValues(),
                       success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
                          if(jsonResponse.success){
                               var result = jsonResponse;
                              var msg = jsonResponse.msg;
        					  Ext.Msg.alert('Success!', msg);
                              store.load({
                                        params:{
                                           product_id:product_id,
                                            operation:operation
                                        }


                                    });

                                    var pack_prevailing_retail_selling_price = jsonResponse.pack_prevailing_retail_selling_price;

                                    var pack_member_selling_price = jsonResponse.pack_member_selling_price;

                                    if(validity == 'true'){

                                        var amount_to_be_paid =pack_member_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_member_selling_price ) * pack_quantity;
                                    }else{
                                        var amount_to_be_paid =pack_prevailing_retail_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_prevailing_retail_selling_price ) * pack_quantity;
                                    }

                                    var values = {
                                        prevailing_retail_selling_price:pack_prevailing_retail_selling_price,
                                        prevailing_retail_selling_price_for_display:Ext.util.Format.number(pack_prevailing_retail_selling_price,'0,000.00'),
                                        per_portion_price:pack_member_selling_price,
                                        per_portion_price_for_display:Ext.util.Format.number(pack_member_selling_price,'0,000.00'),
                                        quantity_of_purchase:pack_quantity,
                                        amount_to_be_paid:amount_to_be_paid,
                                        amount_to_be_paid_for_display:Ext.util.Format.number(amount_to_be_paid,'0,000.00'),
                                        amount_save_on_purchase:amount_save_on_purchase,
                                        amount_save_on_purchase_for_display:Ext.util.Format.number(amount_save_on_purchase,'0,000.00')
                                    };

                                    //reset the form
                                    product_win.down('form').getForm().setValues(values);
                                    console.log('prevailing selling price is:',jsonResponse.pack_prevailing_retail_selling_price);
                                    console.log('member selling price is:',jsonResponse.pack_member_selling_price);
                                    console.log('the quantity is :',pack_quantity);
                                    console.log('the amount paid is :',amount_to_be_paid);
                                    console.log('the amount saved is :',amount_save_on_purchase);

        							win.close();


                          }else{
        						Ext.Msg.alert('ERROR', jsonResponse.msg);
        				  }
                   },
        		   failure: function(response, options) {
        				Ext.Msg.alert('Faulure Error', response.responseText);
        				}

            });

    },

    onEffectPackChangeButtonClick: function(button, e, eOpts) {
        /**var product_win = Ext.getCmp('productdetailspanelforproductswithconstituentswin');

        var product_id = button.up('window').down('form').down('hiddenfield[name=product_id]').getValue();

        var pack_quantity = product_win.down('form').down('#quantityOfPurchase').getValue();

        var validity = product_win.down('form').down('hiddenfield[name=validity]').getValue();

        var operation = product_win.down('form').down('hiddenfield[name=operation]').getValue();

        console.log('validity is:',validity);
        var win = button.up('window'),
        			formPanel = win.down('form');
        			store = product_win.down('#constituentsDataview').getStore();

        			if(formPanel.getForm().isValid()){
        				formPanel.getForm().submit({
        					clientValidation: true,
                            url: '/cobuy/index.php?r=ProductConstituents/effectTheChangesToThePack',
                           //success or failure
        					success: function(form, action) {
        						var result = action.result;
        						if(result.success) {
        							Ext.Msg.alert('Success!', result.msg);
                                    //Ext.Msg.alert('Success!', 'New  Group Information Saved.');
        							//store.load();
        							store.load({
                                        params:{
                                           product_id:product_id,
                                            operation:operation
                                        }


                                    });

                                    var pack_prevailing_retail_selling_price = result.pack_prevailing_retail_selling_price;

                                    var pack_member_selling_price = result.pack_member_selling_price;

                                    if(validity == 'true'){

                                        var amount_to_be_paid =pack_member_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_member_selling_price ) * pack_quantity;
                                    }else{
                                        var amount_to_be_paid =pack_prevailing_retail_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_prevailing_retail_selling_price ) * pack_quantity;
                                    }

                                    var values = {
                                       prevailing_retail_selling_price:pack_prevailing_retail_selling_price,
                                        prevailing_retail_selling_price_for_display:Ext.util.Format.number(pack_prevailing_retail_selling_price,'0,000.00'),
                                        per_portion_price:pack_member_selling_price,
                                        per_portion_price_for_display:Ext.util.Format.number(pack_member_selling_price,'0,000.00'),
                                        quantity_of_purchase:pack_quantity,
                                        amount_to_be_paid:amount_to_be_paid,
                                        amount_to_be_paid_for_display:Ext.util.Format.number(amount_to_be_paid,'0,000.00'),
                                        amount_save_on_purchase:amount_save_on_purchase,
                                        amount_save_on_purchase_for_display:Ext.util.Format.number(amount_save_on_purchase,'0,000.00')
                                    };

                                    //reset the form
                                    product_win.down('form').getForm().setValues(values);
                                    console.log('prevailing selling price is:',result.pack_prevailing_retail_selling_price);
                                    console.log('member selling price is:',result.pack_member_selling_price);
                                    console.log('the quantity is :',pack_quantity);
                                    console.log('the amount paid is :',amount_to_be_paid);
                                    console.log('the amount saved is :',amount_save_on_purchase);


        							win.close();
                                     //redirect to quickteller site for payment
                                    //window.open('https://www.quickteller.com/cobuy');
        						} else {
        							Ext.Msg.alert(result.msg);
        						}
        					},
        					failure: function(form, action) {
        						var result = action.result;
                                switch(action.failureType) {
        							case Ext.form.action.Action.CLIENT_INVALID:
        							Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
        							break;
        							case Ext.form.action.Action.CONNECT_FAILURE:
        							Ext.Msg.alert('Failure', 'Ajax communication failed');
        							break;
        							case Ext.form.action.Action.SERVER_INVALID:
        								Ext.Msg.alert('Failure', result.msg);
        						}
        					}
        				});
        			}
                    **/

        var product_win = Ext.getCmp('productdetailspanelforproductswithconstituentswin');

        var product_id = button.up('window').down('form').down('hiddenfield[name=product_id]').getValue();

        var pack_quantity = product_win.down('form').down('#quantityOfPurchase').getValue();

        var validity = product_win.down('form').down('hiddenfield[name=validity]').getValue();

        var operation = product_win.down('form').down('hiddenfield[name=operation]').getValue();

        var win = button.up('window'),
        			formPanel = win.down('form');
        			store = product_win.down('#constituentsDataview').getStore();


        Ext.Ajax.request({
          url: '/cobuy/index.php?r=ProductConstituents/effectTheChangesToThePack',
           params: formPanel.getForm().getFieldValues(),
                       success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
                          if(jsonResponse.success){
                               var result = jsonResponse;
                              var msg = jsonResponse.msg;
        					  Ext.Msg.alert('Success!', msg);
                             store.load({
                                        params:{
                                           product_id:product_id,
                                            operation:operation
                                        }


                                    });

                                    var pack_prevailing_retail_selling_price = jsonResponse.pack_prevailing_retail_selling_price;

                                    var pack_member_selling_price = jsonResponse.pack_member_selling_price;

                                    if(validity == 'true'){

                                        var amount_to_be_paid =pack_member_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_member_selling_price ) * pack_quantity;
                                    }else{
                                        var amount_to_be_paid =pack_prevailing_retail_selling_price * pack_quantity;
                                        var amount_save_on_purchase = (pack_prevailing_retail_selling_price -pack_prevailing_retail_selling_price ) * pack_quantity;
                                    }

                                    var values = {
                                       prevailing_retail_selling_price:pack_prevailing_retail_selling_price,
                                        prevailing_retail_selling_price_for_display:Ext.util.Format.number(pack_prevailing_retail_selling_price,'0,000.00'),
                                        per_portion_price:pack_member_selling_price,
                                        per_portion_price_for_display:Ext.util.Format.number(pack_member_selling_price,'0,000.00'),
                                        quantity_of_purchase:pack_quantity,
                                        amount_to_be_paid:amount_to_be_paid,
                                        amount_to_be_paid_for_display:Ext.util.Format.number(amount_to_be_paid,'0,000.00'),
                                        amount_save_on_purchase:amount_save_on_purchase,
                                        amount_save_on_purchase_for_display:Ext.util.Format.number(amount_save_on_purchase,'0,000.00')
                                    };

                                    //reset the form
                                    product_win.down('form').getForm().setValues(values);
                                    console.log('prevailing selling price is:',jsonResponse.pack_prevailing_retail_selling_price);
                                    console.log('member selling price is:',result.pack_member_selling_price);
                                    console.log('the quantity is :',pack_quantity);
                                    console.log('the amount paid is :',amount_to_be_paid);
                                    console.log('the amount saved is :',amount_save_on_purchase);


        							win.close();


                          }else{
        						Ext.Msg.alert('ERROR', jsonResponse.msg);
        				  }
                   },
        		   failure: function(response, options) {
        				Ext.Msg.alert('Faulure Error', response.responseText);
        				}

            });

    },

    onLoginThisUserButtonClick: function(button, e, eOpts) {
           //first confirm if the user is logged in
        Ext.Ajax.request({
           url: '/cobuy/index.php?r=Members/confirmIfUserIsLoggedIn',
                       success: function(response){
        				var jsonResponse = Ext.decode(response.responseText);
                          if(jsonResponse.success){
                              var userid = jsonResponse.userid;

                              if(userid === null || userid === undefined){
                                  //display the log in window

                                var win = Ext.create('Cobuy.view.Login');

                                //win.showAt(0,300);

                                  win.show();

                              }

                              console.log('the logged in user id is:', userid);

                          }
                   }

            });
    },

    onJoinThisPlatformButtonClick: function(button, e, eOpts) {
        var win = Ext.create('Cobuy.view.NewMembershipSubscriptionWin');

        win.show();
    },

    init: function(application) {
        this.control({
            "constituentproductdetailswin button#removeproductBtn": {
                click: this.onRemoveConstitutentProductFromThePackButtonClick
            },
            "constituentproductdetailswin button#effectchangeBtn": {
                click: this.onEffectPackChangeButtonClick
            },
            "constituentproductdetailswin button#loginBtn": {
                click: this.onLoginThisUserButtonClick
            },
            "constituentproductdetailswin button#joinBtn": {
                click: this.onJoinThisPlatformButtonClick
            }
        });
    }

});
